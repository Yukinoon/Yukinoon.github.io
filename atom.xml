<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yukinoon&#39; s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.Yukinoon.com/blog/"/>
  <updated>2019-05-28T01:53:36.231Z</updated>
  <id>http://www.Yukinoon.com/blog/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>行为型模式</title>
    <link href="http://www.Yukinoon.com/blog/2019/05/28/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.Yukinoon.com/blog/2019/05/28/行为型模式/</id>
    <published>2019-05-28T01:37:57.000Z</published>
    <updated>2019-05-28T01:53:36.231Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;行为型模式&quot;&gt;&lt;a href=&quot;#行为型模式&quot; class=&quot;headerlink&quot; title=&quot;行为型模式&quot;&gt;&lt;/a&gt;行为型模式&lt;/h3&gt;&lt;p&gt;用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责。&lt;/p&gt;
&lt;p&gt;GoF 中提供了模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器等 11 种行为型模式。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>结构型模式</title>
    <link href="http://www.Yukinoon.com/blog/2019/05/28/%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.Yukinoon.com/blog/2019/05/28/结构型模式/</id>
    <published>2019-05-28T01:36:09.000Z</published>
    <updated>2019-05-28T01:53:50.875Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;结构型模式&quot;&gt;&lt;a href=&quot;#结构型模式&quot; class=&quot;headerlink&quot; title=&quot;结构型模式&quot;&gt;&lt;/a&gt;结构型模式&lt;/h3&gt;&lt;p&gt;– 核心作用：是从程序的结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题。&lt;br&gt;– 分类：&lt;br&gt;• 适配器模式、代理模式、桥接模式、装饰模式、组合模式、外观模式、享元模式&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>创建型模式</title>
    <link href="http://www.Yukinoon.com/blog/2019/05/28/%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.Yukinoon.com/blog/2019/05/28/创建型模式/</id>
    <published>2019-05-28T01:34:25.000Z</published>
    <updated>2019-05-29T02:37:59.092Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;设计模式GOF23&quot;&gt;&lt;a href=&quot;#设计模式GOF23&quot; class=&quot;headerlink&quot; title=&quot;设计模式GOF23&quot;&gt;&lt;/a&gt;设计模式GOF23&lt;/h2&gt;&lt;h3 id=&quot;创建型模式&quot;&gt;&lt;a href=&quot;#创建型模式&quot; class=&quot;headerlink&quot; title=&quot;创建型模式&quot;&gt;&lt;/a&gt;创建型模式&lt;/h3&gt;&lt;p&gt;用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。&lt;/p&gt;
&lt;p&gt;GoF 中提供了单例、原型、工厂方法、抽象工厂、建造者等 5 种创建型模式&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>无法用SSH协议克隆Git项目</title>
    <link href="http://www.Yukinoon.com/blog/2019/04/16/%E6%97%A0%E6%B3%95%E7%94%A8SSH%E5%8D%8F%E8%AE%AE%E5%85%8B%E9%9A%86Git%E9%A1%B9%E7%9B%AE/"/>
    <id>http://www.Yukinoon.com/blog/2019/04/16/无法用SSH协议克隆Git项目/</id>
    <published>2019-04-16T02:17:59.000Z</published>
    <updated>2019-04-16T02:18:37.857Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;1.删除.SSH文件下的known_hosts(.SSH在C:\Users\Windows用户名目录下)&lt;/p&gt;
&lt;p&gt;2.生成ssh公钥认证所需的公钥和私钥文件&lt;/p&gt;
&lt;p&gt;ssh-keygen -t rsa -C
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud学习笔记三</title>
    <link href="http://www.Yukinoon.com/blog/2019/04/16/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/"/>
    <id>http://www.Yukinoon.com/blog/2019/04/16/SpringCloud学习笔记三/</id>
    <published>2019-04-16T02:17:21.000Z</published>
    <updated>2019-04-16T02:17:38.617Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;服务监控hystrixDashboard&quot;&gt;&lt;a href=&quot;#服务监控hystrixDashboard&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud学习笔记二</title>
    <link href="http://www.Yukinoon.com/blog/2019/04/16/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
    <id>http://www.Yukinoon.com/blog/2019/04/16/SpringCloud学习笔记二/</id>
    <published>2019-04-16T02:16:36.000Z</published>
    <updated>2019-04-16T02:16:52.424Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;Ribbon是什么&quot;&gt;&lt;a href=&quot;#Ribbon是什么&quot; class=&quot;headerlink&quot; title=&quot;Ribbon是什么&quot;&gt;&lt;/a&gt;Ribbon是什么&lt;/h3&gt;&lt;p&gt;Spring Cloud
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.Yukinoon.com/blog/2019/04/16/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.Yukinoon.com/blog/2019/04/16/SpringCloud学习笔记/</id>
    <published>2019-04-16T02:15:26.837Z</published>
    <updated>2019-04-16T02:15:26.839Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;与Dubbo的区别：Dubbo的定位始终是一款RPC框架，而SpringCloud的目标是微服务架构下的一站式解决方案&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;构建微服务父工程&quot;&gt;&lt;a href=&quot;#构建微服务父工程&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud学习笔记.md</title>
    <link href="http://www.Yukinoon.com/blog/2019/04/16/SpringCloud%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-md/"/>
    <id>http://www.Yukinoon.com/blog/2019/04/16/SpringCloud学习笔记-md/</id>
    <published>2019-04-16T02:14:46.000Z</published>
    <updated>2019-04-16T02:16:02.535Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;与Dubbo的区别：Dubbo的定位始终是一款RPC框架，而SpringCloud的目标是微服务架构下的一站式解决方案&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;构建微服务父工程&quot;&gt;&lt;a href=&quot;#构建微服务父工程&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小知识点</title>
    <link href="http://www.Yukinoon.com/blog/2019/03/08/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://www.Yukinoon.com/blog/2019/03/08/小知识点/</id>
    <published>2019-03-08T03:23:14.000Z</published>
    <updated>2019-03-08T03:26:32.108Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Reflection的getCallerClass的使用：Reflection.getCallerClass()可以得到调用者的类.这个方法是很好用的。&lt;/p&gt;
&lt;p&gt;SecurityManager
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot与Web开发</title>
    <link href="http://www.Yukinoon.com/blog/2018/12/25/SpringBoot%E4%B8%8EWeb%E5%BC%80%E5%8F%91/"/>
    <id>http://www.Yukinoon.com/blog/2018/12/25/SpringBoot与Web开发/</id>
    <published>2018-12-25T13:39:15.000Z</published>
    <updated>2019-01-10T07:47:48.382Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Web开发&quot;&gt;&lt;a href=&quot;#Web开发&quot; class=&quot;headerlink&quot; title=&quot;Web开发&quot;&gt;&lt;/a&gt;Web开发&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;使用SpringBoot：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1）、创建SpringBoot应用，选中我们需要的模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）、SpringBoot已经默认将这些场景配置好了，只需要在配置文件中指定少量配置就可以运行起来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3）、自己编写业务代码&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-起步&quot;&gt;&lt;a href=&quot;#1-起步&quot; class=&quot;headerlink&quot; title=&quot;1 起步&quot;&gt;&lt;/a&gt;1 起步&lt;/h2&gt;&lt;h3 id=&quot;1-1-SpringBoot对静态资源的映射规则&quot;&gt;&lt;a href=&quot;#1-1-SpringBoot对静态资源的映射规则&quot; class=&quot;headerlink&quot; title=&quot;1.1 SpringBoot对静态资源的映射规则&quot;&gt;&lt;/a&gt;1.1 SpringBoot对静态资源的映射规则&lt;/h3&gt;&lt;figure class=&quot;hljs highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@ConfigurationProperties&lt;/span&gt;(&lt;br&gt;    prefix = &lt;span class=&quot;hljs-string&quot;&gt;&quot;spring.resources&quot;&lt;/span&gt;,&lt;br&gt;    ignoreUnknownFields = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br&gt;)&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ResourceProperties&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ResourceLoaderAware&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;InitializingBean&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;//可以设置与静态资源有关的参数，缓存时间等&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot与日志</title>
    <link href="http://www.Yukinoon.com/blog/2018/12/20/SpringBoot%E4%B8%8E%E6%97%A5%E5%BF%97/"/>
    <id>http://www.Yukinoon.com/blog/2018/12/20/SpringBoot与日志/</id>
    <published>2018-12-20T13:29:10.000Z</published>
    <updated>2018-12-25T13:37:25.297Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot与日志&quot;&gt;&lt;a href=&quot;#SpringBoot与日志&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot与日志&quot;&gt;&lt;/a&gt;SpringBoot与日志&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-SLF4j使用&quot;&gt;&lt;a href=&quot;#1-SLF4j使用&quot; class=&quot;headerlink&quot; title=&quot;1.SLF4j使用&quot;&gt;&lt;/a&gt;1.SLF4j使用&lt;/h2&gt;&lt;h3 id=&quot;1-1-如何在系统中使用SLF4j&quot;&gt;&lt;a href=&quot;#1-1-如何在系统中使用SLF4j&quot; class=&quot;headerlink&quot; title=&quot;1.1 如何在系统中使用SLF4j&quot;&gt;&lt;/a&gt;1.1 如何在系统中使用SLF4j&lt;/h3&gt;&lt;p&gt;以后开发的时候，日志记录方法的调用，不应该来直接调用日志的实现类，而是调用日志抽象层的方法；&lt;/p&gt;
&lt;p&gt;给系统导入slf4j的jar和logback的实现jar&lt;/p&gt;
&lt;figure class=&quot;hljs highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.slf4j.Logger;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.slf4j.LoggerFactory;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloWorld&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    Logger logger = LoggerFactory.getLogger(HelloWorld.class);&lt;br&gt;    logger.info(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;);&lt;br&gt;  &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件</title>
    <link href="http://www.Yukinoon.com/blog/2018/12/16/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://www.Yukinoon.com/blog/2018/12/16/SpringBoot配置文件/</id>
    <published>2018-12-16T15:05:23.000Z</published>
    <updated>2018-12-23T04:13:32.554Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;4-SpringBoot的配置&quot;&gt;&lt;a href=&quot;#4-SpringBoot的配置&quot; class=&quot;headerlink&quot; title=&quot;4 SpringBoot的配置&quot;&gt;&lt;/a&gt;4 SpringBoot的配置&lt;/h2&gt;&lt;h3 id=&quot;4-1-配置文件&quot;&gt;&lt;a href=&quot;#4-1-配置文件&quot; class=&quot;headerlink&quot; title=&quot;4.1.配置文件&quot;&gt;&lt;/a&gt;4.1.配置文件&lt;/h3&gt;&lt;p&gt;Springboot使用一个全局配置文件，配置文件名字是固定的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;application.properties&lt;/li&gt;
&lt;li&gt;application.yml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置文件的作用：修改SpringBoot自动配置的默认值；&lt;/p&gt;
&lt;h3 id=&quot;4-2-yml语法&quot;&gt;&lt;a href=&quot;#4-2-yml语法&quot; class=&quot;headerlink&quot; title=&quot;4.2 yml语法&quot;&gt;&lt;/a&gt;4.2 yml语法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;基本语法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;k:(空格)v    表示一对键值对（空格必须有）；&lt;/p&gt;
&lt;p&gt;​    以空格缩进来控制层级关系；只要是左对齐的一列数据都是同一层级的&lt;/p&gt;
&lt;figure class=&quot;hljs highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;sercer:&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;hljs-attr&quot;&gt;port:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8081&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;hljs-attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;/hello&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;属性和值也是大小写敏感；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;值的写法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字面量：普通的值（数字，字符串，布尔&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    k: v    字面量直接来写，默认不用加单引号或者双引号；&lt;/p&gt;
&lt;p&gt;​    “”：双引号；不会转义字符串里的特殊字符；特殊字符作为本身想表示的意思&lt;/p&gt;
&lt;p&gt;​        name: “张三 \n lisi”    输出为：zhangsan 换行 lisi&lt;/p&gt;
&lt;p&gt;​    ‘’：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串&lt;/p&gt;
&lt;p&gt;​        name: ‘张三 \n lisi’    输出为：zhangsan \n lisi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对象（属性和值）（键值对）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    k: v     在下一行写来写对象属性和值的关系&lt;/p&gt;
&lt;p&gt;​        对象还是k: v的方式&lt;/p&gt;
&lt;figure class=&quot;hljs highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs yaml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;friends:&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;zhangsan&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;hljs-attr&quot;&gt;age:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;行内写法：&lt;/p&gt;
&lt;figure class=&quot;hljs highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs yaml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;friends:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#123;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;zhangsan,age:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot学习</title>
    <link href="http://www.Yukinoon.com/blog/2018/12/12/SpringBoot%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.Yukinoon.com/blog/2018/12/12/SpringBoot学习/</id>
    <published>2018-12-12T12:04:26.000Z</published>
    <updated>2018-12-23T04:13:23.375Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot学习笔记&quot;&gt;&lt;a href=&quot;#SpringBoot学习笔记&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot学习笔记&quot;&gt;&lt;/a&gt;SpringBoot学习笔记&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-配置&quot;&gt;&lt;a href=&quot;#1-配置&quot; class=&quot;headerlink&quot; title=&quot;1 配置&quot;&gt;&lt;/a&gt;1 配置&lt;/h2&gt;&lt;h3 id=&quot;1-1-配置maven&quot;&gt;&lt;a href=&quot;#1-1-配置maven&quot; class=&quot;headerlink&quot; title=&quot;1.1 配置maven&quot;&gt;&lt;/a&gt;1.1 配置maven&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;给maven的setting.xml加上以下&lt;/p&gt;
&lt;figure class=&quot;hljs highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;profile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;jdk-1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;activation&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      	&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;activeByDefault&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;activeByDefault&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;jdk&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;jdk&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;activation&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.source&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.source&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.target&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.target&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.compilerVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;maven.compiler.compilerVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;profile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-SpringBoot-HelloWorld&quot;&gt;&lt;a href=&quot;#2-SpringBoot-HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;2 SpringBoot HelloWorld&quot;&gt;&lt;/a&gt;2 SpringBoot HelloWorld&lt;/h2&gt;&lt;h3 id=&quot;2-1-创建maven工程；（jar）&quot;&gt;&lt;a href=&quot;#2-1-创建maven工程；（jar）&quot; class=&quot;headerlink&quot; title=&quot;2.1 创建maven工程；（jar）&quot;&gt;&lt;/a&gt;2.1 创建maven工程；（jar）&lt;/h3&gt;&lt;h3 id=&quot;2-2-导入SpringBoot相关依赖&quot;&gt;&lt;a href=&quot;#2-2-导入SpringBoot相关依赖&quot; class=&quot;headerlink&quot; title=&quot;2.2 导入SpringBoot相关依赖&quot;&gt;&lt;/a&gt;2.2 导入SpringBoot相关依赖&lt;/h3&gt;&lt;figure class=&quot;hljs highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.5.9.RELEASE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-3-编写一个主程序&quot;&gt;&lt;a href=&quot;#2-3-编写一个主程序&quot; class=&quot;headerlink&quot; title=&quot;2.3 编写一个主程序&quot;&gt;&lt;/a&gt;2.3 编写一个主程序&lt;/h3&gt;&lt;figure class=&quot;hljs highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.boot.SpringApplication;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.boot.autoconfigure.SpringBootApplication;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**&lt;br&gt; *  &lt;span class=&quot;hljs-doctag&quot;&gt;@SpringBootApplication&lt;/span&gt; 来标注一个主程序类，来说明这是一个SpringBoot应用&lt;br&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HelloWorldMainApplication&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;        &lt;span class=&quot;hljs-comment&quot;&gt;//启动应用&lt;/span&gt;&lt;br&gt;        SpringApplication.run(HelloWorldMainApplication.class,args);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://www.Yukinoon.com/blog/2018/12/11/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://www.Yukinoon.com/blog/2018/12/11/Markdown语法/</id>
    <published>2018-12-11T11:39:16.000Z</published>
    <updated>2018-12-23T04:13:08.706Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h5 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h5&gt;&lt;p&gt;​    类似于html中的&lt;code&gt;&amp;lt;h1&lt;/code&gt;到&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;标签，要想把一段文字定义为标题，只需在前面加上若干的#号即可。&lt;/p&gt;
&lt;figure class=&quot;hljs highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs markdown&quot;&gt;&lt;span class=&quot;hljs-section&quot;&gt;# h1&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-section&quot;&gt;## h2&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-section&quot;&gt;### h3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2-区块&quot;&gt;&lt;a href=&quot;#2-区块&quot; class=&quot;headerlink&quot; title=&quot;2.区块&quot;&gt;&lt;/a&gt;2.区块&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;区块&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;hljs highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs markdown&quot;&gt;&lt;span class=&quot;hljs-quote&quot;&gt;&amp;gt; 区块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-quote&quot;&gt;&amp;gt; 区块2&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
